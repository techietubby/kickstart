---
- name: Define VM
  hosts: localhost

  vars:
    vmName:      test2
    autoStart:   true
    memoryUnit:  MiB
    memory:      2048
    maxMemory:   8192
    vcpu:        2
    maxVcpus:    4
    arch:        x86_64
    osVer:       centos-stream8
    osImage:     /vms/software/CentOS-8.2.2004-x86_64-dvd1.iso
    poolLoc:     /virt2
    ksLoc:       /var/www/html
    boot_dev:
    - cdrom
    - hd
    bootMenu:    yes
    diskFile:    /virt2/{{ vmName }}.qcow2
    diskType:    qcow2
    diskSize:    20G
    targetDev:   vda
    interfaceType: bridge
    macAddress:  52:54:00:a3:f8:33
    bridge: br0
    bridgeType: virtio

    rootVg:     vg_system
    vcKeymap:   gb
    xLayouts:   gb
    lang:       en_GB.UTF-8
    netDevice:  enp1s0
    netIp:      192.168.0.164
    netMask:    255.255.255.0
    gateWay:    192.168.0.2
    nameServer: 192.168.0.50,62.179.104.196,213.46.228.196
    hostName:   "{{ vmName }}.persephone.local"

    #maxMemory:  8388608
    #memory:     4194304
    #memoryUnit: KiB

  tasks:

  - name: Copy kickstart file to HTTP server
    template:
      src:      templates/kickstart.j2
      dest:     "{{ ksLoc }}/{{ vmName }}.ks"
      owner:    root
      group:    root
      mode:     "0644"
      setype:   httpd_sys_content_t

  - name: get list of VMs
    virt:
      command: "list_vms"
    register: vms 

  - name: Ensure VM is destroyed
    virt:
      name:     "{{ vmName }}"
      state:    destroyed
    when: vmName in vms.list_vms

  - name: UnDefine VM
    virt:
      command:  undefine
      name:     "{{ vmName }}"
    when: vmName in vms.list_vms

  - name: Define and build VM
    shell: |
           virt-install --name={{ vmName }} --memory {{ memory }},maxmemory={{ maxMemory }} --vcpus {{ vcpu }},maxvcpus={{ maxVcpus }} \
           --disk path={{ poolLoc }}/{{ vmName }}.qcow2,size=20 \
           --os-variant=centos{{ osVer }} --os-type linux \
           --network=bridge=br0,model=virtio,driver.iommu=on --graphics none \
           --console pty,target_type=serial \
           --location {{ osImage }} \
           --install kernel_args_overwrite=yes \
           --rng /dev/random,driver.iommu=on --graphics none \
           --initrd-inject={{ ksLoc }}/{{ vmName }}.ks \
           --extra-args="ks=file:/{{ vmName }}.ks console=ttyS0,115200n8 serial" \
           --boot cdrom,hd,menu=on --accelerate

  - name: Start VM
    virt:
      name: "{{ vmName }}"
      state: running
      autostart: "{{ autostart | default(false) }}"
      # uri: 'qemu:///'

  - name: Show VM status
    virt:
      command: status
      name: "{{ vmName }}"

  - name: Show VM info (requires -v)
    virt:
      command: info
      name: "{{ vmName }}"

  - name: Show VM info (requires -v)
    debug:
      msg: Enter virsh console {{ vmName }} to monitor the progress of the install
...
